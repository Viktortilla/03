// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=a1, b=a2, c=a3, d=a4, e=a5, f=a6, g=a7, h=a8);

    Register(in=in, load=a1, out=b1);
    Register(in=in, load=a2, out=b2);
    Register(in=in, load=a3, out=b3);
    Register(in=in, load=a4, out=b4);
    Register(in=in, load=a5, out=b5);
    Register(in=in, load=a6, out=b6);
    Register(in=in, load=a7, out=b7);
    Register(in=in, load=a8, out=b8);

    Mux8Way16(a=b1, b=b2, c=b3, d=b4, e=b5, f=b6, g=b7, h=b8, sel=address, out=out);
}